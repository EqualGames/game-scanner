on:
  pull_request:
    branches:
      - main
      - develop

name: Test

jobs:
  cancel_duplicated_workflows:
    runs-on: ubuntu-latest

    steps:
      - uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

  cargo_test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: windows-latest
            rust-target: x86_64-pc-windows-msvc
            node-target: x64
          - os: windows-latest
            rust-target: aarch64-pc-windows-msvc
            node-target: arm64
          - os: ubuntu-latest
            rust-target: x86_64-unknown-linux-gnu
            node-target: x64
          - os: ubuntu-latest
            rust-target: aarch64-unknown-linux-gnu
            node-target: arm64
          - os: macos-latest
            rust-target: x86_64-apple-darwin
            node-target: x64
          - os: macos-latest
            rust-target: aarch64-apple-darwin
            node-target: arm64

    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.rust-target }}

      - name: cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --package game-scanner

      - name: cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --package game-scanner
        env:
          RUST_BACKTRACE: 1

      - name: cargo doc
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --package game-scanner --no-deps

      - name: cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --package game-scanner --lib --release

  node_test:
    needs: cargo_test
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: windows-latest
            rust-target: x86_64-pc-windows-msvc
            node-target: x64
          - os: windows-latest
            rust-target: aarch64-pc-windows-msvc
            node-target: arm64
          - os: ubuntu-latest
            rust-target: x86_64-unknown-linux-gnu
            node-target: x64
          - os: ubuntu-latest
            rust-target: aarch64-unknown-linux-gnu
            node-target: arm64
          - os: macos-latest
            rust-target: x86_64-apple-darwin
            node-target: x64
          - os: macos-latest
            rust-target: aarch64-apple-darwin
            node-target: arm64

    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.rust-target }}

      - uses: actions/setup-node@v3
        with:
          node-version: 12.x
          architecture: ${{ matrix.node-target }}

      - run: |
          cd node
          npm ci
          npm run build
