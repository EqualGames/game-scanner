on:
  push:
    tags:
      - 'v*'

name: Release

jobs:

  github:
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.version.outputs.value }}

    steps:
      - name: Get version
        id: version
        run: echo ::set-output name=value::${GITHUB_REF#refs/*/v*}

  build_assets:
    needs: [ github ]
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - macos-latest
          - windows-latest
        architecture:
          - x64

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2.1.4
        with:
          node-version: 12.x
          architecture: ${{ matrix.architecture }}

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - run: npm ci
        working-directory: node

      - run: npm run build
        working-directory: node

      - name: Upload release assets
        uses: actions/upload-artifact@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ASSET_NAME: ${{ runner.os }}-${{ needs.github.outputs.version }}.node
        with:
          name: ${{ env.ASSET_NAME }}
          path: node/native/index.node
          if-no-files-found: error

  publish:
    needs: [ github, build_assets ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2.1.4
        with:
          node-version: 12.x
          architecture: x64
          scope: '@equal-games'
          registry-url: 'https://registry.npmjs.org'

      - name: Download windows asset
        uses: actions/download-artifact@v2
        with:
          name: Windows-${{ needs.github.outputs.version }}.node
          path: node/npm/native

      - name: Rename windows asset
        run: mv index.node windows.node
        working-directory: node/npm/native

      - name: Download macos asset
        uses: actions/download-artifact@v2
        with:
          name: macOS-${{ needs.github.outputs.version }}.node
          path: node/npm/native

      - name: Rename macos asset
        run: mv index.node darwin.node
        working-directory: node/npm/native

      - name: Update version on package.json
        run: npm version ${{ needs.github.outputs.version }}
        working-directory: node/npm

      - name: Copy files
        run: |
          cp ./lib/index.d.ts ./npm/index.d.ts
          cp ../LICENSE ./npm/LICENSE
          cp ../README.md ./npm/README.md
        working-directory: node

      - run: npm publish --access public
        working-directory: node/npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
