on:
  push:
    tags:
      - "v*"

name: Release

jobs:
  github:
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.version.outputs.value }}

    steps:
      - name: Get version
        id: version
        run: echo ::set-output name=value::${GITHUB_REF#refs/*/v*}

  build_assets:
    needs: [github]
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: windows-latest
            rust-target: x86_64-pc-windows-msvc
            node-target: x64
            output: windows-x64
          - os: windows-latest
            rust-target: aarch64-pc-windows-msvc
            node-target: arm64
            output: windows-arm64
          - os: ubuntu-latest
            rust-target: x86_64-unknown-linux-gnu
            node-target: x64
            output: linux-x64
          - os: ubuntu-latest
            rust-target: aarch64-unknown-linux-gnu
            node-target: arm64
            output: linux-arm64
          - os: macos-latest
            rust-target: x86_64-apple-darwin
            node-target: x64
            output: darwin-x64
          - os: macos-latest
            rust-target: aarch64-apple-darwin
            node-target: arm64
            output: darwin-arm64

    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.rust-target }}

      - uses: actions/setup-node@v3
        with:
          node-version: 12.x
          architecture: ${{ matrix.node-target }}

      - run: npm ci
        working-directory: node

      - run: npm run build
        working-directory: node

      - name: Upload release assets
        uses: actions/upload-artifact@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ matrix.output }}.node
          path: node/native/index.node
          if-no-files-found: error

  publish:
    needs: [github, build_assets]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - uses: actions/setup-node@v3
        with:
          node-version: 12.x
          scope: "@equal-games"
          registry-url: "https://registry.npmjs.org"

      - name: cargo publish
        uses: actions-rs/cargo@v1
        with:
          command: publish
          args: --package game-scanner
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Download windows-x64 asset
        uses: actions/download-artifact@v3
        with:
          name: windows-x64.node
          path: node/npm/native

      - name: Download macos-x64 asset
        uses: actions/download-artifact@v3
        with:
          name: darwin-x64.node
          path: node/npm/native

      - name: Download linux-x64 asset
        uses: actions/download-artifact@v3
        with:
          name: linux-x64.node
          path: node/npm/native

      - name: Download windows-arm64 asset
        uses: actions/download-artifact@v3
        with:
          name: windows-arm64.node
          path: node/npm/native

      - name: Download macos-arm64 asset
        uses: actions/download-artifact@v3
        with:
          name: darwin-arm64.node
          path: node/npm/native

      - name: Download linux-arm64 asset
        uses: actions/download-artifact@v3
        with:
          name: linux-arm64.node
          path: node/npm/native

      - name: Update version on package.json
        run: npm version ${{ needs.github.outputs.version }}
        working-directory: node/npm

      - name: Copy files
        run: |
          cp ./lib/index.d.ts ./npm/index.d.ts
          cp ../LICENSE ./npm/LICENSE
          cp ../README.md ./npm/README.md
        working-directory: node

      - run: npm publish --access public
        working-directory: node/npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
